[project]
name = "pathwaylens"
version = "2.0.0"
description = "Next-generation computational biology platform for multi-omics pathway analysis"
authors = [
    {name = "PathwayLens Team", email = "pathwaylens@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "requests>=2.31.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pyyaml>=6.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
# Core analysis dependencies
analysis = [
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "statsmodels>=0.14.0",
    "networkx>=3.1.0",
    "biopython>=1.79",
    "mygene>=3.2.2",
]

# Visualization dependencies  
viz = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

# Pathway analysis dependencies
pathways = [
    "gseapy>=1.0.0",
    "enrichr>=0.0.6",
    "gprofiler-official>=1.0.0",
    "pyensembl>=2.2.0",
    "pybiomart>=0.2.0",
    "bioservices>=1.11.0",
    "goatools>=1.3.0",
]

# API and web interface dependencies
api = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    "tenacity>=8.2.0",
]

# Background job processing
jobs = [
    "celery>=5.3.0",
    "redis>=4.6.0",
]

# Database dependencies
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
]

# Authentication and security
auth = [
    "python-multipart>=0.0.6",
    "python-jose>=3.3.0",
    "passlib>=1.7.4",
    "bcrypt>=4.0.0",
]

# Data storage and processing
storage = [
    "h5py>=3.9.0",
    "zarr>=2.16.0",
    "cachetools>=5.3.0",
    "openpyxl>=3.1.0",
    "xlrd>=2.0.0",
]

# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=3.3.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

# All features (for easy installation)
all = [
    "pathwaylens[analysis,viz,pathways,api,jobs,database,auth,storage]"
]

# CLI Entry Points - This creates the standalone 'pathwaylens' command
[project.scripts]
pathwaylens = "pathwaylens_cli.main:main"

# Alternative entry point for backward compatibility
[project.gui-scripts]
pathwaylens-gui = "pathwaylens_cli.main:gui_app"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["pathwaylens_*"]

[tool.setuptools.package-data]
"pathwaylens_cli" = ["templates/**/*", "config/**/*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pathwaylens_core", "pathwaylens_cli", "pathwaylens_api"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=pathwaylens_core",
    "--cov=pathwaylens_cli", 
    "--cov=pathwaylens_api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "api: API tests",
    "cli: CLI tests",
    "frontend: Frontend tests",
]
